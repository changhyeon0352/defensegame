//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""e660cf6b-f9e1-4aa6-91c0-cfbfdd803b35"",
            ""actions"": [
                {
                    ""name"": ""CameraRotate"",
                    ""type"": ""Value"",
                    ""id"": ""0cfa0a2e-77a5-49c0-b69e-8f4891880d0c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraRotateOnOff"",
                    ""type"": ""Button"",
                    ""id"": ""e33b86b5-1729-483c-bd1e-e0b0dc8ffa4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""bc9f4279-f0f0-4578-80e0-dbd31defa80c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShowHero"",
                    ""type"": ""Button"",
                    ""id"": ""6e6b7b0b-28fd-404a-aaa4-e299edfceb3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""07462963-c6f1-4d78-96a7-3fcb102acd1d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""New control scheme"",
                    ""action"": ""CameraRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e3c62f4-41df-469e-8a09-12671541834a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotateOnOff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""240ba89b-ca37-47be-8efa-11101ef0ed5f"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bccabb9-ba9a-410b-995d-30cae5d8fc71"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Setting"",
            ""id"": ""c7aadc0e-47e6-4d72-a8a8-2c4f8cd1e8fe"",
            ""actions"": [
                {
                    ""name"": ""NewUnitGroup"",
                    ""type"": ""Button"",
                    ""id"": ""63b8ae0b-47bc-407f-9863-76442e02da37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""scrollUpDown"",
                    ""type"": ""Value"",
                    ""id"": ""a2f8055c-c67f-4018-929f-fdc29243625d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateUnitGroup"",
                    ""type"": ""Value"",
                    ""id"": ""4b9cba86-49eb-48b1-8178-1af57f6b2f24"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""41b3e08d-2428-403d-80ce-eeb847003fc8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReSetting"",
                    ""type"": ""Button"",
                    ""id"": ""4593cc3c-cd7e-4737-bc6d-bd7a4c2dcd91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchRow"",
                    ""type"": ""Button"",
                    ""id"": ""053bf4f0-d9c6-4fbc-8b7d-8b9b09a233df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cd037e39-09e1-488e-aa8e-703615c3725e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NewUnitGroup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23c3e38a-b9de-4ad4-a15d-bc77ae49cae4"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""scrollUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""dab6e51b-82a5-4825-8040-a35794070379"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateUnitGroup"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""f8ac8ea2-6f8b-4961-9d4c-0c0231bd5496"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateUnitGroup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""8f6c317f-8f10-41a9-b5c7-e1a98bc544d7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateUnitGroup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7f9e05e2-9ebd-4da6-8c5b-a387c091a19c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5be3a913-d85d-4002-86df-6465d463fcca"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReSetting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be2fc703-1f7a-43cc-8f63-6f15c8a48a0c"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63ca5f40-7439-4ebf-9b07-3add6bead423"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""304f0050-d6b7-4650-bc54-881212c589f6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d9f60cf-11be-4533-8b7b-20b0f3c36daf"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Test"",
            ""id"": ""6f988005-0680-4377-a4b3-50e406b2fdb5"",
            ""actions"": [
                {
                    ""name"": ""CameraStop"",
                    ""type"": ""Button"",
                    ""id"": ""178f1cea-74ac-489d-b217-1ad6b9ae66cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ecda2b5c-6a02-467d-bc5a-598e505c1de7"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraStop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Command"",
            ""id"": ""ec32dbf4-cfac-47a6-9848-f75a2959fcbe"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""b4285c70-e16b-4eb7-a9b7-ab235d118973"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeHero"",
                    ""type"": ""Button"",
                    ""id"": ""951b7070-dd79-4d0c-809a-a395784325f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""skillClick"",
                    ""type"": ""Button"",
                    ""id"": ""3b7da92a-2cab-4673-ab97-925f9fe092e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveorSetTarget"",
                    ""type"": ""Button"",
                    ""id"": ""187752ac-b1e9-45be-8767-43047109cc59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackMove"",
                    ""type"": ""Button"",
                    ""id"": ""cd8e076f-584e-4e52-8c40-57c0f8b90510"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton1"",
                    ""type"": ""Button"",
                    ""id"": ""aa5d1554-d051-40ce-8220-2aee7dbaa967"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton2"",
                    ""type"": ""Button"",
                    ""id"": ""9326acae-cf0d-4bc6-a705-b06a5060a3d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton3"",
                    ""type"": ""Button"",
                    ""id"": ""5064be72-6ba1-4e58-bca6-64be1d00555f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton4"",
                    ""type"": ""Button"",
                    ""id"": ""c9fe9b42-817c-49d1-b1b7-df25f616d9bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillCancel"",
                    ""type"": ""Button"",
                    ""id"": ""f2392847-a211-4b42-9dfb-f3962f1b178a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeroSkillClick"",
                    ""type"": ""Button"",
                    ""id"": ""c96d209e-dc46-4ba4-b443-d0c607b9ab9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""28f94a1c-bc30-4ee4-ae40-eb59df0d4500"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1592ad38-0da6-4a32-8fac-59e35fbcba4a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skillClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32ab1fcd-2878-49db-979d-612dd317ce98"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveorSetTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34874fe3-de95-42fc-b513-547e3c53a5a7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d318ee5-da26-4a74-b53a-baadf9dcc3e1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""015f25de-df55-4354-ad64-9c4bbc61c55f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9155d027-0e6c-425c-b793-0f59fa7ad53b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46a34a9f-befd-4dae-bb97-57fed1b6f8b1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4109f629-d0c4-4961-ad76-85fb6ec7adf9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bde7f1a4-0c39-4d7f-88f5-9f1fb43fb0cc"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1e02bf6-bc94-4eab-960f-a521e3118062"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4d38764-1cd8-4419-b790-0ff75e9ba75d"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""732a3d8e-3847-49cd-8f21-64bb8f1a8b8e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd80f40c-0176-42a3-9edd-1b0bb7da2488"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeroSkillClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""pc"",
            ""bindingGroup"": ""pc"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_CameraRotate = m_Camera.FindAction("CameraRotate", throwIfNotFound: true);
        m_Camera_CameraRotateOnOff = m_Camera.FindAction("CameraRotateOnOff", throwIfNotFound: true);
        m_Camera_CameraZoom = m_Camera.FindAction("CameraZoom", throwIfNotFound: true);
        m_Camera_ShowHero = m_Camera.FindAction("ShowHero", throwIfNotFound: true);
        // Setting
        m_Setting = asset.FindActionMap("Setting", throwIfNotFound: true);
        m_Setting_NewUnitGroup = m_Setting.FindAction("NewUnitGroup", throwIfNotFound: true);
        m_Setting_scrollUpDown = m_Setting.FindAction("scrollUpDown", throwIfNotFound: true);
        m_Setting_RotateUnitGroup = m_Setting.FindAction("RotateUnitGroup", throwIfNotFound: true);
        m_Setting_Click = m_Setting.FindAction("Click", throwIfNotFound: true);
        m_Setting_ReSetting = m_Setting.FindAction("ReSetting", throwIfNotFound: true);
        m_Setting_SwitchRow = m_Setting.FindAction("SwitchRow", throwIfNotFound: true);
        // Test
        m_Test = asset.FindActionMap("Test", throwIfNotFound: true);
        m_Test_CameraStop = m_Test.FindAction("CameraStop", throwIfNotFound: true);
        // Command
        m_Command = asset.FindActionMap("Command", throwIfNotFound: true);
        m_Command_Select = m_Command.FindAction("Select", throwIfNotFound: true);
        m_Command_ChangeHero = m_Command.FindAction("ChangeHero", throwIfNotFound: true);
        m_Command_skillClick = m_Command.FindAction("skillClick", throwIfNotFound: true);
        m_Command_MoveorSetTarget = m_Command.FindAction("MoveorSetTarget", throwIfNotFound: true);
        m_Command_AttackMove = m_Command.FindAction("AttackMove", throwIfNotFound: true);
        m_Command_SkillButton1 = m_Command.FindAction("SkillButton1", throwIfNotFound: true);
        m_Command_SkillButton2 = m_Command.FindAction("SkillButton2", throwIfNotFound: true);
        m_Command_SkillButton3 = m_Command.FindAction("SkillButton3", throwIfNotFound: true);
        m_Command_SkillButton4 = m_Command.FindAction("SkillButton4", throwIfNotFound: true);
        m_Command_SkillCancel = m_Command.FindAction("SkillCancel", throwIfNotFound: true);
        m_Command_HeroSkillClick = m_Command.FindAction("HeroSkillClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_CameraRotate;
    private readonly InputAction m_Camera_CameraRotateOnOff;
    private readonly InputAction m_Camera_CameraZoom;
    private readonly InputAction m_Camera_ShowHero;
    public struct CameraActions
    {
        private @PlayerInput m_Wrapper;
        public CameraActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraRotate => m_Wrapper.m_Camera_CameraRotate;
        public InputAction @CameraRotateOnOff => m_Wrapper.m_Camera_CameraRotateOnOff;
        public InputAction @CameraZoom => m_Wrapper.m_Camera_CameraZoom;
        public InputAction @ShowHero => m_Wrapper.m_Camera_ShowHero;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @CameraRotate.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotate;
                @CameraRotate.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotate;
                @CameraRotate.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotate;
                @CameraRotateOnOff.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotateOnOff;
                @CameraRotateOnOff.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotateOnOff;
                @CameraRotateOnOff.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraRotateOnOff;
                @CameraZoom.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @ShowHero.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnShowHero;
                @ShowHero.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnShowHero;
                @ShowHero.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnShowHero;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraRotate.started += instance.OnCameraRotate;
                @CameraRotate.performed += instance.OnCameraRotate;
                @CameraRotate.canceled += instance.OnCameraRotate;
                @CameraRotateOnOff.started += instance.OnCameraRotateOnOff;
                @CameraRotateOnOff.performed += instance.OnCameraRotateOnOff;
                @CameraRotateOnOff.canceled += instance.OnCameraRotateOnOff;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
                @ShowHero.started += instance.OnShowHero;
                @ShowHero.performed += instance.OnShowHero;
                @ShowHero.canceled += instance.OnShowHero;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Setting
    private readonly InputActionMap m_Setting;
    private ISettingActions m_SettingActionsCallbackInterface;
    private readonly InputAction m_Setting_NewUnitGroup;
    private readonly InputAction m_Setting_scrollUpDown;
    private readonly InputAction m_Setting_RotateUnitGroup;
    private readonly InputAction m_Setting_Click;
    private readonly InputAction m_Setting_ReSetting;
    private readonly InputAction m_Setting_SwitchRow;
    public struct SettingActions
    {
        private @PlayerInput m_Wrapper;
        public SettingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @NewUnitGroup => m_Wrapper.m_Setting_NewUnitGroup;
        public InputAction @scrollUpDown => m_Wrapper.m_Setting_scrollUpDown;
        public InputAction @RotateUnitGroup => m_Wrapper.m_Setting_RotateUnitGroup;
        public InputAction @Click => m_Wrapper.m_Setting_Click;
        public InputAction @ReSetting => m_Wrapper.m_Setting_ReSetting;
        public InputAction @SwitchRow => m_Wrapper.m_Setting_SwitchRow;
        public InputActionMap Get() { return m_Wrapper.m_Setting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingActions set) { return set.Get(); }
        public void SetCallbacks(ISettingActions instance)
        {
            if (m_Wrapper.m_SettingActionsCallbackInterface != null)
            {
                @NewUnitGroup.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnNewUnitGroup;
                @NewUnitGroup.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnNewUnitGroup;
                @NewUnitGroup.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnNewUnitGroup;
                @scrollUpDown.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnScrollUpDown;
                @scrollUpDown.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnScrollUpDown;
                @scrollUpDown.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnScrollUpDown;
                @RotateUnitGroup.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnRotateUnitGroup;
                @RotateUnitGroup.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnRotateUnitGroup;
                @RotateUnitGroup.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnRotateUnitGroup;
                @Click.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnClick;
                @ReSetting.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnReSetting;
                @ReSetting.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnReSetting;
                @ReSetting.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnReSetting;
                @SwitchRow.started -= m_Wrapper.m_SettingActionsCallbackInterface.OnSwitchRow;
                @SwitchRow.performed -= m_Wrapper.m_SettingActionsCallbackInterface.OnSwitchRow;
                @SwitchRow.canceled -= m_Wrapper.m_SettingActionsCallbackInterface.OnSwitchRow;
            }
            m_Wrapper.m_SettingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NewUnitGroup.started += instance.OnNewUnitGroup;
                @NewUnitGroup.performed += instance.OnNewUnitGroup;
                @NewUnitGroup.canceled += instance.OnNewUnitGroup;
                @scrollUpDown.started += instance.OnScrollUpDown;
                @scrollUpDown.performed += instance.OnScrollUpDown;
                @scrollUpDown.canceled += instance.OnScrollUpDown;
                @RotateUnitGroup.started += instance.OnRotateUnitGroup;
                @RotateUnitGroup.performed += instance.OnRotateUnitGroup;
                @RotateUnitGroup.canceled += instance.OnRotateUnitGroup;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ReSetting.started += instance.OnReSetting;
                @ReSetting.performed += instance.OnReSetting;
                @ReSetting.canceled += instance.OnReSetting;
                @SwitchRow.started += instance.OnSwitchRow;
                @SwitchRow.performed += instance.OnSwitchRow;
                @SwitchRow.canceled += instance.OnSwitchRow;
            }
        }
    }
    public SettingActions @Setting => new SettingActions(this);

    // Test
    private readonly InputActionMap m_Test;
    private ITestActions m_TestActionsCallbackInterface;
    private readonly InputAction m_Test_CameraStop;
    public struct TestActions
    {
        private @PlayerInput m_Wrapper;
        public TestActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraStop => m_Wrapper.m_Test_CameraStop;
        public InputActionMap Get() { return m_Wrapper.m_Test; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TestActions set) { return set.Get(); }
        public void SetCallbacks(ITestActions instance)
        {
            if (m_Wrapper.m_TestActionsCallbackInterface != null)
            {
                @CameraStop.started -= m_Wrapper.m_TestActionsCallbackInterface.OnCameraStop;
                @CameraStop.performed -= m_Wrapper.m_TestActionsCallbackInterface.OnCameraStop;
                @CameraStop.canceled -= m_Wrapper.m_TestActionsCallbackInterface.OnCameraStop;
            }
            m_Wrapper.m_TestActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraStop.started += instance.OnCameraStop;
                @CameraStop.performed += instance.OnCameraStop;
                @CameraStop.canceled += instance.OnCameraStop;
            }
        }
    }
    public TestActions @Test => new TestActions(this);

    // Command
    private readonly InputActionMap m_Command;
    private ICommandActions m_CommandActionsCallbackInterface;
    private readonly InputAction m_Command_Select;
    private readonly InputAction m_Command_ChangeHero;
    private readonly InputAction m_Command_skillClick;
    private readonly InputAction m_Command_MoveorSetTarget;
    private readonly InputAction m_Command_AttackMove;
    private readonly InputAction m_Command_SkillButton1;
    private readonly InputAction m_Command_SkillButton2;
    private readonly InputAction m_Command_SkillButton3;
    private readonly InputAction m_Command_SkillButton4;
    private readonly InputAction m_Command_SkillCancel;
    private readonly InputAction m_Command_HeroSkillClick;
    public struct CommandActions
    {
        private @PlayerInput m_Wrapper;
        public CommandActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_Command_Select;
        public InputAction @ChangeHero => m_Wrapper.m_Command_ChangeHero;
        public InputAction @skillClick => m_Wrapper.m_Command_skillClick;
        public InputAction @MoveorSetTarget => m_Wrapper.m_Command_MoveorSetTarget;
        public InputAction @AttackMove => m_Wrapper.m_Command_AttackMove;
        public InputAction @SkillButton1 => m_Wrapper.m_Command_SkillButton1;
        public InputAction @SkillButton2 => m_Wrapper.m_Command_SkillButton2;
        public InputAction @SkillButton3 => m_Wrapper.m_Command_SkillButton3;
        public InputAction @SkillButton4 => m_Wrapper.m_Command_SkillButton4;
        public InputAction @SkillCancel => m_Wrapper.m_Command_SkillCancel;
        public InputAction @HeroSkillClick => m_Wrapper.m_Command_HeroSkillClick;
        public InputActionMap Get() { return m_Wrapper.m_Command; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommandActions set) { return set.Get(); }
        public void SetCallbacks(ICommandActions instance)
        {
            if (m_Wrapper.m_CommandActionsCallbackInterface != null)
            {
                @Select.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSelect;
                @ChangeHero.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnChangeHero;
                @ChangeHero.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnChangeHero;
                @ChangeHero.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnChangeHero;
                @skillClick.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillClick;
                @skillClick.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillClick;
                @skillClick.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillClick;
                @MoveorSetTarget.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnMoveorSetTarget;
                @MoveorSetTarget.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnMoveorSetTarget;
                @MoveorSetTarget.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnMoveorSetTarget;
                @AttackMove.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnAttackMove;
                @AttackMove.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnAttackMove;
                @AttackMove.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnAttackMove;
                @SkillButton1.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton1;
                @SkillButton1.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton1;
                @SkillButton1.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton1;
                @SkillButton2.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton2;
                @SkillButton2.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton2;
                @SkillButton2.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton2;
                @SkillButton3.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton3;
                @SkillButton3.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton3;
                @SkillButton3.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton3;
                @SkillButton4.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton4;
                @SkillButton4.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton4;
                @SkillButton4.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillButton4;
                @SkillCancel.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillCancel;
                @SkillCancel.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillCancel;
                @SkillCancel.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnSkillCancel;
                @HeroSkillClick.started -= m_Wrapper.m_CommandActionsCallbackInterface.OnHeroSkillClick;
                @HeroSkillClick.performed -= m_Wrapper.m_CommandActionsCallbackInterface.OnHeroSkillClick;
                @HeroSkillClick.canceled -= m_Wrapper.m_CommandActionsCallbackInterface.OnHeroSkillClick;
            }
            m_Wrapper.m_CommandActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @ChangeHero.started += instance.OnChangeHero;
                @ChangeHero.performed += instance.OnChangeHero;
                @ChangeHero.canceled += instance.OnChangeHero;
                @skillClick.started += instance.OnSkillClick;
                @skillClick.performed += instance.OnSkillClick;
                @skillClick.canceled += instance.OnSkillClick;
                @MoveorSetTarget.started += instance.OnMoveorSetTarget;
                @MoveorSetTarget.performed += instance.OnMoveorSetTarget;
                @MoveorSetTarget.canceled += instance.OnMoveorSetTarget;
                @AttackMove.started += instance.OnAttackMove;
                @AttackMove.performed += instance.OnAttackMove;
                @AttackMove.canceled += instance.OnAttackMove;
                @SkillButton1.started += instance.OnSkillButton1;
                @SkillButton1.performed += instance.OnSkillButton1;
                @SkillButton1.canceled += instance.OnSkillButton1;
                @SkillButton2.started += instance.OnSkillButton2;
                @SkillButton2.performed += instance.OnSkillButton2;
                @SkillButton2.canceled += instance.OnSkillButton2;
                @SkillButton3.started += instance.OnSkillButton3;
                @SkillButton3.performed += instance.OnSkillButton3;
                @SkillButton3.canceled += instance.OnSkillButton3;
                @SkillButton4.started += instance.OnSkillButton4;
                @SkillButton4.performed += instance.OnSkillButton4;
                @SkillButton4.canceled += instance.OnSkillButton4;
                @SkillCancel.started += instance.OnSkillCancel;
                @SkillCancel.performed += instance.OnSkillCancel;
                @SkillCancel.canceled += instance.OnSkillCancel;
                @HeroSkillClick.started += instance.OnHeroSkillClick;
                @HeroSkillClick.performed += instance.OnHeroSkillClick;
                @HeroSkillClick.canceled += instance.OnHeroSkillClick;
            }
        }
    }
    public CommandActions @Command => new CommandActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    private int m_pcSchemeIndex = -1;
    public InputControlScheme pcScheme
    {
        get
        {
            if (m_pcSchemeIndex == -1) m_pcSchemeIndex = asset.FindControlSchemeIndex("pc");
            return asset.controlSchemes[m_pcSchemeIndex];
        }
    }
    public interface ICameraActions
    {
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnCameraRotateOnOff(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnShowHero(InputAction.CallbackContext context);
    }
    public interface ISettingActions
    {
        void OnNewUnitGroup(InputAction.CallbackContext context);
        void OnScrollUpDown(InputAction.CallbackContext context);
        void OnRotateUnitGroup(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnReSetting(InputAction.CallbackContext context);
        void OnSwitchRow(InputAction.CallbackContext context);
    }
    public interface ITestActions
    {
        void OnCameraStop(InputAction.CallbackContext context);
    }
    public interface ICommandActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnChangeHero(InputAction.CallbackContext context);
        void OnSkillClick(InputAction.CallbackContext context);
        void OnMoveorSetTarget(InputAction.CallbackContext context);
        void OnAttackMove(InputAction.CallbackContext context);
        void OnSkillButton1(InputAction.CallbackContext context);
        void OnSkillButton2(InputAction.CallbackContext context);
        void OnSkillButton3(InputAction.CallbackContext context);
        void OnSkillButton4(InputAction.CallbackContext context);
        void OnSkillCancel(InputAction.CallbackContext context);
        void OnHeroSkillClick(InputAction.CallbackContext context);
    }
}
